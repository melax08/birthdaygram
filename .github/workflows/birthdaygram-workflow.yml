name: birthdaygram workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: "1.5.1"

      - name: Install dependencies
        run: |
          poetry install

      - name: Test with flake8
        run: |
          poetry run flake8 .

      - name: Test with isort
        run: |
          poetry run isort . --check --diff

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}

          script: |
            cd birthdaygram
            git pull
             echo "${{ secrets.SUDO_PASS }}" | sudo -S docker compose rm -sf birthdaygram_bot
             echo "${{ secrets.SUDO_PASS }}" | sudo -S docker image rm birthdaygram-birthdaygram_bot
            cat <<EOF > .env
            # File generated by github actions workflow and will be recreated on a new git push
            # Telegram bot API token (get it in botfather)
            TOKEN=${{ secrets.BOT_TG_TOKEN }}
            # Additional bot settings
            RUN_SCHEDULER_HOURS=12 18
            BOT_TIMEZONE=Europe/Moscow
            # DB settings
            DB_NAME=${{ secrets.DB_NAME }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            # DONE WORKFLOW ENVS
            EOF
             echo "${{ secrets.SUDO_PASS }}" | sudo -S docker compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.SEND_MESSAGE_TO_ID }}
          token: ${{ secrets.SEND_MESSAGE_TG_TOKEN }}
          message: üéÇ ${{ github.workflow }} —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!
