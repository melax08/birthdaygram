from typing import List

from database import UserTable
from exceptions import EmptyQuery
from utils import create_persons_info_list, birthdate_processing


def show_all(chat_id: int) -> List[str]:
    """Logic of `show all` button."""
    user_table = UserTable(chat_id)
    records = user_table.show_all()
    count = len(records)

    if not count:
        raise EmptyQuery('–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π! '
                         '–ú–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å? /add')

    persons = create_persons_info_list(records)
    message = [f'üóÇ –°–ø–∏—Å–æ–∫ –ª—é–¥–µ–π –≤ –±–∞–∑–µ ({count}):']
    message.extend(persons)
    return message


def today_birthdays(chat_id: int) -> List[str]:
    """Logic of showing today birthdays functional."""
    user_table = UserTable(chat_id)
    records = user_table.today_birthdays()

    if not len(records):
        raise EmptyQuery('–°–µ–≥–æ–¥–Ω—è –Ω–∏ —É –∫–æ–≥–æ –Ω–µ—Ç –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è :(')

    message = ['‚ö°Ô∏è –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É:']
    for record in records:
        birthdate, age = birthdate_processing(record.birth_date)
        message.append(
            f'üéÇ {record.full_name}, –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å: {age} ({birthdate})')

    return message


def next_week_birthdays(chat_id: int) -> List[str]:
    user_table = UserTable(chat_id)
    records = user_table.next_week_birthdays()

    if not len(records):
        raise EmptyQuery

    message = ['‚ÄºÔ∏è –†–æ–≤–Ω–æ —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É:']
    for record in records:
        birthdate, age = birthdate_processing(record.birth_date)
        message.append(
            f'{record.full_name}, –∏—Å–ø–æ–ª–Ω–∏—Ç—Å—è: {age + 1} ({birthdate})'
        )

    return message


def next_birthdays(chat_id: int, interval: int) -> List[str]:
    """Logic of showing birthdays in interval from now to `interval`."""
    user_table = UserTable(chat_id)
    records = user_table.next_days_interval_birthdays(interval)

    if not len(records):
        raise EmptyQuery(
            f'–í —Ç–µ—á–µ–Ω–∏–µ {interval} –¥–Ω–µ–π –Ω–∏ —É –∫–æ–≥–æ –Ω–µ—Ç –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è.'
        )

    message = [
        f'‚ùï –í —Ç–µ—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö {interval} –¥–Ω–µ–π –µ—Å—Ç—å –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è —É:\n'
    ]

    for record in records:
        birthdate, age = birthdate_processing(record.birth_date)
        message.append(
            f'{record.full_name}, –∏—Å–ø–æ–ª–Ω–∏—Ç—Å—è: {age + 1} ({birthdate})'
        )

    return message
